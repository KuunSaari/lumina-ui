@use 'sass:map';
@use '@lumina-ui/theme/index.scss' as *;

@include b(alert) {
  @include useTheme {
    display: grid;
    grid-template-columns: 1fr auto;
    height: 50px;
    box-sizing: border-box;
    position: relative;
    overflow: hidden;

    border-radius: getVar('borderRadiusBase');
    outline: getVar('borderBase');
    box-shadow: getVar('shadowStandardM'), getVar('shadowInset2');
    background-color: getVar('colorResting');
    padding: getVar('paddingSmall');
    padding-left: getVar('paddingLarge');
    padding-bottom: getVar('paddingBase');

    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      top: calc(100% - 3px);
      left: 0;
    }

    @include e(title) {
      font: getVar('fontBodyMediumL');
    }

    @include e(description) {
      color: getVar('colorTextDescription');
    }

    @include e(content) {
      display: grid;
      grid-template-rows: 1fr;
    }

    @include is(with-description) {
      height: 76px;
      border-radius: getVar('borderRadiusLarge');

      @include e(content) {
        grid-template-rows: 1fr 1fr;
      }
    }

    @include not-is(with-description) {
      @include be(alert, close) {
        border-radius: getVar('borderRadiusSmall');
      }
    }

    @include e(buttons) {
      & > * {
        height: 100%;
        margin-left: 8px;
      }
    }

    @include e(close) {
      aspect-ratio: 1;
    }

    @include e(text) {
      display: flex;
      justify-content: start;
      align-items: center;
    }

    @include is(text-center) {
      @include be(alert, text) {
        justify-content: center;
        text-align: center;
      }
    }

    @include e(icon) {
      width: 16px;
      aspect-ratio: 1;
      margin-right: 6px;
    }

    $themes: (
      info: 'colorPrimary',
      success: 'colorSuccess',
      warning: 'colorWarning',
      danger: 'colorDanger'
    );

    @each $theme, $color-name in $themes {
      &--#{$theme} {
        $color: getVar($color-name);

        &::after {
          background-color: $color;
        }

        @include be(alert, icon) {
          color: $color;
        }
      }
    }
  }
}

.alert-fade-enter-active,
.alert-fade-leave-active {
  @include useTheme {
    transition: all getVar('transitionBase')
  }
  transform-origin: right center;
}

.alert-fade-enter-from,
.alert-fade-leave-to {
  opacity: 0;
  transform: scaleX(0) scaleY(0);
  filter: blur(20px);
}

.alert-fade-enter-to,
.alert-fade-leave-from {
  opacity: 1;
  transform: scaleX(1) scaleY(1);
  filter: blur(0);
}
